# Edit this file to introduce tasks to be run by cron.
#
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
#
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').#
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron(8)
#
# m h  dom mon dow   command
SHELL=/bin/bash
ENV_FILE=/app/deploy/.env

00 20 * * * cd /app && ./reservation_thxx_go_external --method="reminder" --staging=false > /app/log/reminder.log.`date "+\%Y_\%m_\%d_\%T"` 2>&1 &
00 22 * * * cd /app && ./reservation_thxx_go_external --method="feedback-reminder" --staging=false > /app/log/feedback_reminder.log.`date "+\%Y_\%m_\%d_\%T"` 2>&1 &
00 01 01 * * . $ENV_FILE && sh /app/tools/zip_log.sh
05 * * * * . $ENV_FILE && sh /app/tools/dump_mongodb.sh
30 00 * * * . $ENV_FILE && sh /app/tools/dump_compress.sh

